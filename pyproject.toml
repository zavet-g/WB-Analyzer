[tool.poetry]
   name = "WB-Analyzer"
   version = "0.1.1"
   description = "Парсинг сервис товаров с WB"
   authors = ["Artem Bukarev <jollysjam@gmail.com>"]
   package-mode = false

   [tool.poetry.dependencies]
   python = "^3.13"
   asyncpg = "0.30.0"
   fastapi = { extras = ["all"], version = "0.115.6" }
   uvicorn = { extras = ["standard"], version = "0.34.3" }
   sqlalchemy = "2.0.36"
   alembic = "1.13.3"
   orjson = "3.10.13"
   loguru = "0.7.3"
   pydantic-settings = "2.0.2"
   aiofiles = "24.1.0"
   types-aiofiles = "24.1.0.20241221"
   PyJWT = "2.10.1"
   python-dotenv = "1.0.1"
   simple-print = "2.2.5"
   aiohttp = "^3.9.5"
   beautifulsoup4 = "^4.12.3"

   [tool.poetry.group.dev.dependencies]
   pytest = "8.3.4"
   mypy = "1.4.1"
   pre-commit = "4.0.1"
   pytest-asyncio = "0.21.2"
   pytest-alembic = "0.11.1"
   pytest-cov = "4.1.0"
   ruff = "0.8.4"
   pytest-httpx = "0.34.0"
   pytest-mock = "3.14.0"

   [build-system]
   requires = ["poetry-core>=1.0.0"]
   build-backend = "poetry.core.masonry.api"

   [tool.mypy]
   python_version = "3.13"
   ignore_missing_imports = true

   [tool.pytest.ini_options]
   asyncio_mode = "auto"
   markers = [
       "slow: marks tests as slow (deselect with '-m \"not slow\"')",
       "handlers",
   ]

   [tool.virtualenvs]
   in-project = true

   [tool.ruff]
   line-length = 100
   target-version = "py311"
   exclude = [
       ".bzr",
       ".direnv",
       ".eggs",
       ".git",
       ".git-rewrite",
       ".hg",
       ".mypy_cache",
       ".nox",
       ".pants.d",
       ".pytype",
       ".ruff_cache",
       ".svn",
       ".tox",
       ".venv",
       "__pypackages__",
       "_build",
       "buck-out",
       "build",
       "dist",
       "node_modules",
       "venv",
       ".venv",
       "env",
   ]

   [tool.ruff.lint]
   select = [
       "E", # PyCodeStyle errors
       "W", # PyCodeStyle warnings
       "I", # isort
       "N", # pep8-naming
       "F", # Pyflakes
       "UP", # pyupgrade
       "T20", # flake8-print
       "SIM", # flake8-simplify
       "B", # flake8-bugbear
       "ASYNC", # flake8-async
       "G", # flake8-logging-format
       "DTZ", # flake8-datetimez
       "D", # pydocstyle
       "RUF", # Ruff-specific rules
       "ANN", # type hints
   ]
   ignore = [
       "ANN001",
       "ANN201",
       "ANN206",
       "ANN204",
       "ANN002",
       "ANN003",
       "ANN401",
       "D100",
       "D101",
       "D104",
       "D105",
       "D106",
       "D107",
       "D202",
       "N805",
       "N806",
       "B008",
       "RUF001",
       "RUF002",
       "RUF003",
       "RUF012",
   ]
   extend-select = [
       "B006", # mutable-argument-default
       "PIE794", # duplicate-class-field-definition
   ]
   dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

   [tool.ruff.lint.isort]
   force-wrap-aliases = true
   force-single-line = true
   combine-as-imports = false
   lines-between-types = 1

   [tool.ruff.lint.pydocstyle]
   convention = "google"

   [tool.ruff.lint.per-file-ignores]
   "migrations/*.py" = ["D", "E402", "E501", "ANN"]
   "tests/*.py" = ["D", "DTZ", "E501", "ANN"]
   "tests/conftest.py" = ["E402"]

   [tool.ruff.format]
   quote-style = "single"
   indent-style = "space"
   skip-magic-trailing-comma = false